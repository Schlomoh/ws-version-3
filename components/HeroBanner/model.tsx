/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 ./matrix_tv.glb -o ./tv.glb -t -T
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["fsf_07_-_Default_0"]: THREE.Mesh;
    ["Object006_08_-_Default_0"]: THREE.Mesh;
  };
  materials: {
    ["07_-_Default"]: THREE.MeshStandardMaterial;
    ["08_-_Default"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3d/tv.glb") as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes["fsf_07_-_Default_0"].geometry}
        material={materials["07_-_Default"]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes["Object006_08_-_Default_0"].geometry}
        material={materials["08_-_Default"]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/3d/tv.glb");
